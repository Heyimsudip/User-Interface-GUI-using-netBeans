/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author chaud
 */
public class TableInfo extends javax.swing.JFrame {

    static int foundRow;
    static int foundTable;
 
    /**
     * Creates new form TableInfo
     */
    public TableInfo() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabelClose = new javax.swing.JLabel();
        jLabelMin = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        SearchField = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton_update = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Model_id = new javax.swing.JLabel();
        Mobile_Name = new javax.swing.JLabel();
        Category = new javax.swing.JLabel();
        Company = new javax.swing.JLabel();
        Price = new javax.swing.JLabel();
        Version = new javax.swing.JLabel();
        Camera_back = new javax.swing.JLabel();
        Camera_front = new javax.swing.JLabel();
        Size = new javax.swing.JLabel();
        jButton_add = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField_modelid = new javax.swing.JTextField();
        jTextField_Mobilename = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jRadioButton_ios = new javax.swing.JRadioButton();
        jRadioButton_android = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jComboBox_company = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jTextField_price = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField_version = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField_cameraback = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField_camerafront = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField_size = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton_clear = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 107, 107));

        jLabelClose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelClose.setText("x");
        jLabelClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCloseMouseClicked(evt);
            }
        });

        jLabelMin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelMin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMin.setText("-");
        jLabelMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMinMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelClose, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClose)
                    .addComponent(jLabelMin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(10, 61, 98));

        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"iphone12_256", "Iphone 12 256GB ", "IOS ", "Apple",  new Integer(158000), "ios14", "12 MP - 5 MP", "10MP", "6.1inches"},
                {"S20 FE", "S20 FE", "Android", "Samsung",  new Integer(19000), "Android 9", "32mp", "5 MP", "6.5 inches"},
                {"OnePlus Nord", "OnePlus Nord N10 5G", "Android", "OnePlus",  new Integer(394999), "Android 10", "76 MP", "16 MP", "6.2 inches"},
                {"mi7", "mi7pro", "Android", "MI",  new Integer(12900), "Android8", "32mp", "8mp", "6.1inch"},
                {"E7 Plus  4GB", "Motorola E7 Plus", "Android", "Motorola",  new Integer(16590), "Android 10", "48 MP", "8 MP", "6.1inches"},
                {"Mi 10", "MXiaomi Mi 10", "Android", "Xiaomi",  new Integer(89999), "Android 11", "108MP", "32MP", "6.67 inches"},
                {"Note 9 Pro Max 8/128 GB)", "Redmi Note 9 Pro Max", "Android", "Xiaomi",  new Integer(34999), "Android 10", "64 MP", "32MP", "6.67 inches"},
                {"Poco X3", "Poco X3 NFC", "Android", "Poco",  new Integer(31999), "Android 10", "64 MP", "20MP", "6.67 inches"},
                {"Vivo V17", "Vivo V17 Pro", "Android", "Vivo",  new Integer(49990), "Android 10", "48MP", "32MP", "6.44 inches"},
                {"OnePlus8Pro", "OnePlus 8 Pro", "Android", "OnePlus",  new Integer(125000), "Android 11", "109 MP", "16 MP", "6.78 inches"},
                {"OPPO Reno", "OPPO Reno 3", "Android", "OPPO",  new Integer(46990), "Android 10", "64 MP", "44MP", "6.4 inches"},
                {"Realme 7i", "Realme 7i", "Android", "Realme",  new Integer(29990), "Android 10", "76 MP", "16 MP", "6.5 inches"},
                {"Nokia7.2", "Nokia 7.2", "Android", "Nokia",  new Integer(23999), "Android 9", "60 MP", "20 MP", "6.3 inches"},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Model ID/ Model", "Mobile Name", "Catogory", "Company/Brand", "Price", "Version", "Camera Back", "Camera Front", "Size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
        }

        jButton3.setBackground(new java.awt.Color(214, 48, 49));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brand / Company", "Apple", "MI", "Xiaomi", "Realme", "Motorola", "Samsung", "Vivo", "OnePlus", "Nokia" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(46, 204, 113));
        jButton4.setText("Search By Brand");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFieldActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(46, 204, 113));
        jButton5.setText("Search By Price");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton_update.setBackground(new java.awt.Color(243, 156, 18));
        jButton_update.setText("Update");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 949, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_update, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(61, 61, 61)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_update, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(10, 61, 98));

        jLabel1.setBackground(new java.awt.Color(255, 107, 107));
        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 107, 107));
        jLabel1.setText("Add Mobile");

        Model_id.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Model_id.setForeground(new java.awt.Color(240, 240, 240));
        Model_id.setText("Model Id");

        Mobile_Name.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Mobile_Name.setForeground(new java.awt.Color(240, 240, 240));
        Mobile_Name.setText("Name");

        Category.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Category.setForeground(new java.awt.Color(240, 240, 240));
        Category.setText("Category");

        Company.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Company.setForeground(new java.awt.Color(240, 240, 240));
        Company.setText("Company");

        Price.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Price.setForeground(new java.awt.Color(240, 240, 240));
        Price.setText("Price");

        Version.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Version.setForeground(new java.awt.Color(240, 240, 240));
        Version.setText("Version");

        Camera_back.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Camera_back.setForeground(new java.awt.Color(240, 240, 240));
        Camera_back.setText("Camera Back");

        Camera_front.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Camera_front.setForeground(new java.awt.Color(240, 240, 240));
        Camera_front.setText("Camera Front");

        Size.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        Size.setForeground(new java.awt.Color(240, 240, 240));
        Size.setText("Size");

        jButton_add.setBackground(new java.awt.Color(9, 132, 227));
        jButton_add.setText("Add");
        jButton_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_addActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 107, 107));

        jTextField_Mobilename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MobilenameActionPerformed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 107, 107));

        buttonGroup1.add(jRadioButton_ios);
        jRadioButton_ios.setText("IOS");
        jRadioButton_ios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_iosActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton_android);
        jRadioButton_android.setText("Android");
        jRadioButton_android.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_androidActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 107, 107));

        jComboBox_company.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brand / Company", "Apple", "MI", "Xiaomi", "Realme", "Motorola", "Samsung", "Vivo", "OnePlus", "Nokia" }));
        jComboBox_company.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_companyActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 107, 107));

        jLabel12.setForeground(new java.awt.Color(255, 107, 107));

        jTextField_version.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_versionActionPerformed(evt);
            }
        });

        jLabel13.setForeground(new java.awt.Color(255, 107, 107));

        jTextField_cameraback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_camerabackActionPerformed(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(255, 107, 107));

        jTextField_camerafront.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_camerafrontActionPerformed(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 107, 107));

        jTextField_size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_sizeActionPerformed(evt);
            }
        });

        jLabel16.setForeground(new java.awt.Color(255, 107, 107));

        jButton_clear.setBackground(new java.awt.Color(46, 204, 113));
        jButton_clear.setText("Clear");
        jButton_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Category, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                .addComponent(Mobile_Name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Model_id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Version, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Company, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Camera_back)
                            .addComponent(Camera_front)
                            .addComponent(Size, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_camerafront)
                            .addComponent(jTextField_price)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_modelid)
                            .addComponent(jTextField_Mobilename)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_version)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_cameraback)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_size)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jRadioButton_ios, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                                .addComponent(jRadioButton_android, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox_company, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_add, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Model_id, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_modelid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Mobilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mobile_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButton_android)
                        .addComponent(Category))
                    .addComponent(jRadioButton_ios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_company, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Company, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Price))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField_version, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Version))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_cameraback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Camera_back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_camerafront, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Camera_front, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Size))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_add, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(144, Short.MAX_VALUE))
        );

        jMenuBar1.setBorder(null);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem3.setText("Delete");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem4.setText("Update");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem5.setText("User Manual");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(970, 970, 970)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
              // TODO add your handling code here:
        int count=0;
//        int rcount = jTable1.getRowCount();
        int ccount = jTable1.getColumnCount();
        
        Object [] tar = new Object[ccount];
        int [] sortedPrice = new int[ccount];
        for(int i = 0; i<ccount; i++){
            int v = Integer.parseInt(jTable1.getValueAt(i, 4).toString());
            sortedPrice[i]= v;
        }
        
        //sorting array according to the price
        sort(sortedPrice);
        int low = 0;
        int high = sortedPrice.length-1;
        String sprice = SearchField.getText();
        System.out.println(sprice);
        System.out.println(Arrays.toString(sortedPrice));      
        if(sprice.isEmpty()){
            //if the invalid value is entered
        JOptionPane.showMessageDialog(rootPane, "Please Enter The Price ");
        count++;
    }                                            
        else{
            if(count == 0){
                BinarySearch search = new BinarySearch();
                int value = Integer.parseInt(sprice);
                int ret = Search(sortedPrice, low, high, value);
                 System.out.println(ret);
                if(ret == -1){
                    //if the invalid value is entered
                    JOptionPane.showMessageDialog(rootPane, "Please Enter The Valid Price");
                }
                else{
                    for (int i = 0; i<jTable1.getColumnCount(); i++){
                        int va = Integer.parseInt(jTable1.getValueAt(i, 4).toString());
                        if(va == value){
                            for (int j = 0; j<jTable1.getColumnCount(); j++){
                                tar [j] = jTable1.getValueAt(i, j);
                            }   
                        }
                    }
                    int v=jTable1.getColumnCount();
                    
            JOptionPane.showMessageDialog(rootPane, Arrays.deepToString(tar));
                }
            }
        }
        count = 0;
        
    }//GEN-LAST:event_jButton5ActionPerformed

    //Dividing the array 
     public static void sort(int[] arb)
   {  
      if (arb.length <= 1) { return; }
      int[] first = new int[arb.length / 2];
      int[] second = new int[arb.length - first.length];
      // Copy the first half of a into first, the second half into second
      for (int i = 0; i < first.length; i++) 
      { 
         first[i] = arb[i]; 
      }
      for (int i = 0; i < second.length; i++) 
      { 
         second[i] = arb[first.length + i]; 
      }
      sort(first);
      sort(second);
      merge(first, second, arb);
   }

   /**
      Merges two sorted arrays into an array
      @param first the first sorted array
      @param second the second sorted array
      @param a the array into which to merge first and second
   */
   private static void merge(int[] first, int[] second, int[] arb)
   {  
      int iFirst = 0; // Next element to consider in the first array
      int iSecond = 0; // Next element to consider in the second array
      int j = 0; // Next open position in a

      // As long as neither iFirst nor iSecond is past the end, move
      // the smaller element into a
      while (iFirst < first.length && iSecond < second.length)
      {  
         if (first[iFirst] < second[iSecond])
         {  
            arb[j] = first[iFirst];
            iFirst++;
         }
         else
         {  
            arb[j] = second[iSecond];
            iSecond++;
         }
         j++;
      }

      // Note that only one of the two loops below copies entriesd
      // Copy any remaining entries of the first array
      while (iFirst < first.length) 
      { 
         arb[j] = first[iFirst]; 
         iFirst++; j++;
      }
      // Copy any remaining entries of the second half
      while (iSecond < second.length) 
      { 
         arb[j] = second[iSecond]; 
         iSecond++; j++;
      }
   }
    
    public int Search(int[]arb, int low, int high, int value ){
        
        if (low <=high){
           int mid=(low+high)/2;
           if (arb[mid]==value){
               return mid;
           }else if (arb[mid]<value){
               return Search(arb, mid+1,high,value);
           }else{
               return Search(arb, low,mid-1,value);
           }
          
        }else{
            return -1;
        }
        
    }
    private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchFieldActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
              // TODO add your handling code here:
              //this methos is used to find the mobile acccoring to the brand and company
        String result;
        int count =0;
        String searchValue = (String) jComboBox1.getSelectedItem();
        String listOfItems ="";
        for (int i =0; i< jTable1.getRowCount (); i++)
        {
            String value = (String) jTable1.getValueAt(i,3);
            System.out.print(value);
            if (searchValue.equals(value))
                //getting the value
            {
                String modID =String.valueOf(jTable1.getValueAt(i, 1));
                String modName = String.valueOf(jTable1.getValueAt(i, 2));
                String Category = String.valueOf(jTable1.getValueAt(i, 3));
                String Price= String.valueOf(jTable1.getValueAt(i, 4));
                String Version= String.valueOf(jTable1.getValueAt(i, 5));
                String Cameraback= String.valueOf(jTable1.getValueAt(i, 6));
                String Camerafront= String.valueOf(jTable1.getValueAt(i, 7));
                String Size= String.valueOf(jTable1.getValueAt(i, 8));
                count++;
                listOfItems += String.valueOf(count)+ "Mobile ID: " + modID+ ", Mobile Name: " +modName+ ", Category: " + Category+ ",Price: " +Price +", Version:" +Version+ ",Cameraback: "+Cameraback+",Size:"+Size+"\n";
            }
        }
        result = "There are " + count + " Phone with Category " + searchValue+ ":\n"+ listOfItems;
        JOptionPane.showMessageDialog(null, result, "Number of Items", JOptionPane.INFORMATION_MESSAGE);
    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //this method is used to delete the selected row of the table.
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //get selected row index
        try{
        int SelectedRowIndex = jTable1.getSelectedRow();
        model.removeRow(SelectedRowIndex);
        JOptionPane.showMessageDialog(null, "Row is Deleted");
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Row is not Selected");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addActionPerformed
        String modID = jTextField_modelid.getText().trim();
        String modName = jTextField_Mobilename.getText().trim();
        
        var Categorys = "";
        if (jRadioButton_ios.isSelected()) {
            Categorys = jRadioButton_ios.getText();
        }
        if (jRadioButton_android.isSelected()) {
            Categorys = jRadioButton_android.getText();
       
        }
        System.out.println("RadioButton Value: " + Categorys);
        
        String Company = (String) jComboBox_company.getSelectedItem();
        String Price = jTextField_price.getText().trim();
        String Version = jTextField_version.getText().trim();
	String Cameraback = jTextField_cameraback.getText().trim();
	String Camerafront = jTextField_camerafront.getText().trim();
	String Size = jTextField_size.getText().trim();
        
        
        
        int nextRow = 0;//to point rows
        boolean empty = false;// row is empty, data can be added
        String s;
        int colCount = jTable1.getColumnCount();
        
        if (!modID.isEmpty()) {
            if (!modName.isEmpty()) {
                if (!Categorys.isEmpty()) {
                    if (jComboBox_company.getSelectedIndex() != 0) {
                        if (!Price.isEmpty()) {
                            if (!Version.isEmpty()) {
                                if (!Cameraback.isEmpty()) {
                                    if (!Camerafront.isEmpty()){
                                        if (!Size.isEmpty()) {
                                            String data[] = {modID, modName, Categorys, Company, Price, Version, Cameraback, Camerafront, Size};

                                            do {
                                                s = (String) jTable1.getValueAt(nextRow, 0);
                                                if (s != null && s.length() != 0) {
                                                    nextRow++;
                                                } else {
                                                    empty = true;
                                                }
                                            } while (!empty);//check until empty row is found
                                            
                                            for (int i = 0; i < colCount; i++) {
                                                jTable1.setValueAt(data[i], nextRow, i);
                                            }
                                            
                                            //code to sort the table
                                    
                                        //jTable1.setAutoCreateRowSorter(true);
                                        jTextField_modelid.setText("");
                                        jTextField_Mobilename.setText("");
                                        jComboBox_company.setSelectedIndex(0);
                                        buttonGroup1.clearSelection();
                                        jTextField_price.setText("");
                                        jTextField_version.setText("");
                                        jTextField_cameraback.setText("");
                                        jTextField_camerafront.setText("");
                                        jTextField_size.setText("");
                                        JOptionPane.showMessageDialog(null, "New mobile is Added");
                                            
                                        //Text field Validation is the textfield is left empty
                                        jLabel16.setText("");
                                        jLabel15.setText("");
                                        jLabel14.setText("");
                                        jLabel13.setText("");
                                        jLabel12.setText("");
                                        jLabel11.setText("");
                                        jLabel10.setText("");
                                        jLabel9.setText("");
                                        jLabel8.setText("");

                                        } else {
                                            jLabel16.setText("*Required Field");
                                            jTextField_size.grabFocus();
                                            jLabel15.setText("");
                                            jLabel14.setText("");
                                            jLabel13.setText("");
                                            jLabel12.setText("");
                                            jLabel11.setText("");
                                            jLabel10.setText("");
                                            jLabel9.setText("");
                                            jLabel8.setText("");
                                        }
                                        } else {
                                        jLabel15.setText("*Required Field");
                                        jTextField_camerafront.grabFocus();
                                        jLabel16.setText("");
                                        jLabel14.setText("");
                                        jLabel13.setText("");
                                        jLabel12.setText("");
                                        jLabel11.setText("");
                                        jLabel10.setText("");
                                        jLabel9.setText("");
                                        jLabel8.setText("");
                                        }
                                    } else {
                            jLabel14.setText("*Required Field");
			    jTextField_cameraback.grabFocus();
			    jLabel16.setText("");
			    jLabel15.setText("");
                            jLabel13.setText("");
			    jLabel12.setText("");
                            jLabel11.setText("");
                            jLabel10.setText("");
                            jLabel9.setText("");
                            jLabel8.setText("");
                        }
                    } else {
                        jLabel13.setText("*Required Field");
                        jTextField_version.grabFocus();
			jLabel16.setText("");
                        jLabel15.setText("");
                        jLabel14.setText("");
                        jLabel12.setText("");
			jLabel11.setText("");
                        jLabel10.setText("");
                        jLabel9.setText("");
                        jLabel8.setText("");
                    }
                } else {
                    jLabel12.setText("*Required Field");
                    jTextField_price.grabFocus();
		    jLabel16.setText("");
                    jLabel15.setText("");
                    jLabel14.setText("");
                    jLabel13.setText("");
                    jLabel11.setText("");
		    jLabel10.setText("");
                    jLabel9.setText("");
                    jLabel8.setText("");
                }
            } else {
                jLabel11.setText("*Required Field");
		jLabel16.setText("");
                jLabel15.setText("");
                jLabel14.setText("");
                jLabel13.setText("");
                jLabel12.setText("");
                jLabel10.setText("");
		jLabel9.setText("");
                jLabel8.setText("");
            }
        } else {
            jLabel10.setText("*Required Field");
	    jLabel16.setText("");
            jLabel15.setText("");
            jLabel14.setText("");
            jLabel13.setText("");
            jLabel12.setText("");
            jLabel11.setText("");
            jLabel9.setText("");
	    jLabel8.setText("");
        }
	
	}else {
            jLabel9.setText("*Required Field");
            jTextField_Mobilename.grabFocus();
	    jLabel16.setText("");
            jLabel15.setText("");
            jLabel14.setText("");
            jLabel13.setText("");
            jLabel12.setText("");
            jLabel11.setText("");
            jLabel10.setText("");
	    jLabel8.setText("");
        }
	
	}else {
            jLabel8.setText("*Required Field");
            jTextField_modelid.grabFocus();
	    jLabel16.setText("");
            jLabel15.setText("");
            jLabel14.setText("");
            jLabel13.setText("");
            jLabel12.setText("");
            jLabel11.setText("");
            jLabel10.setText("");
	    jLabel9.setText("");
        }
    }//GEN-LAST:event_jButton_addActionPerformed

  
    
 
    private void jTextField_MobilenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MobilenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MobilenameActionPerformed

    private void jRadioButton_iosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_iosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_iosActionPerformed

    private void jRadioButton_androidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_androidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_androidActionPerformed

    private void jComboBox_companyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_companyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_companyActionPerformed

    private void jTextField_versionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_versionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_versionActionPerformed

    private void jTextField_camerabackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_camerabackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_camerabackActionPerformed

    private void jTextField_camerafrontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_camerafrontActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_camerafrontActionPerformed

    private void jTextField_sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_sizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sizeActionPerformed

    private void jButton_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_clearActionPerformed
        
        //this method is used to clear all the text field and reset combobox.
        //set all the text field empty
        SearchField.setText("");    
        jTextField_modelid.setText("");
        jTextField_Mobilename.setText("");
        jTextField_price.setText("");
        jTextField_version.setText("");
        jTextField_cameraback.setText("");
        jTextField_camerafront.setText("");
        jTextField_size.setText("");
        buttonGroup1.clearSelection();
        jComboBox_company.setSelectedIndex(0);
        jComboBox1.setSelectedIndex(0);
        
    }//GEN-LAST:event_jButton_clearActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        //this method is used to select the row inside the table.
        int selectedRow = 0;
        jTextField_modelid.setText(model.getValueAt(selectedRow, 0).toString());
        jTextField_Mobilename.setText(model.getValueAt(selectedRow, 1).toString());
        jTextField_price.setText(model.getValueAt(selectedRow, 4).toString());
        jTextField_version.setText(model.getValueAt(selectedRow, 5).toString());
        jTextField_cameraback.setText(model.getValueAt(selectedRow, 6).toString());
        jTextField_camerafront.setText(model.getValueAt(selectedRow, 7).toString());
        jTextField_size.setText(model.getValueAt(selectedRow, 8).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        //This method is used to Upadate the selected row
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        if(i >= 0)
        {
          model.setValueAt(jTextField_modelid.getText(), i, 0);
          model.setValueAt(jTextField_Mobilename.getText(), i, 1); 
          model.setValueAt(jTextField_price.getText(), i, 4); 
          model.setValueAt(jTextField_version.getText(), i, 5); 
          model.setValueAt(jTextField_cameraback.getText(), i, 6); 
          model.setValueAt(jTextField_camerafront.getText(), i, 7);
          model.setValueAt(jTextField_size.getText(), i, 8);
          
        }else{
            JOptionPane.showMessageDialog(null, "Row is not selected");
        }    
    }//GEN-LAST:event_jButton_updateActionPerformed

    static String[] filmArray;
void addFromText(JTable table, String[] a, File file){
    
}
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
     
        //This methos is used to import csv file.
        JFileChooser chooser = new JFileChooser();
            int status = chooser.showOpenDialog(null);
            if (status == JFileChooser.APPROVE_OPTION) {
                File file = chooser.getSelectedFile();
                if (file == null) {
                    return;
                }
          
            }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       //This method is used to Delete the selected row of jtable.
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        //get selected row index
        try{
        int SelectedRowIndex = jTable1.getSelectedRow();
        model.removeRow(SelectedRowIndex);
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Row is not Selected");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //To Exit the System
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        //This method is used to update the row of the table
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        if(i >= 0)
        {
          model.setValueAt(jTextField_modelid.getText(), i, 0);
          model.setValueAt(jTextField_Mobilename.getText(), i, 1); 
          model.setValueAt(jTextField_price.getText(), i, 4); 
          model.setValueAt(jTextField_version.getText(), i, 5); 
          model.setValueAt(jTextField_cameraback.getText(), i, 6); 
          model.setValueAt(jTextField_camerafront.getText(), i, 7);
          model.setValueAt(jTextField_size.getText(), i, 8);
          
        }else{
            JOptionPane.showMessageDialog(null, "Row is not selected");
        }    
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jLabelMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMinMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jLabelMinMouseClicked

    private void jLabelCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabelCloseMouseClicked

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
                try{
          // Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler " +"program%20files\\a.pdf"); 
          System.getProperty("user.dir");
            System.out.println(System.getProperty("user.dir"));
          Desktop.getDesktop().open(new java.io.File(System.getProperty("user.dir")+"\\src\\assignment\\Help.pdf"));
       }
       catch(IOException e)
       {
           JOptionPane.showMessageDialog(null, "Check file Details");
       }
         
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Camera_back;
    private javax.swing.JLabel Camera_front;
    private javax.swing.JLabel Category;
    private javax.swing.JLabel Company;
    private javax.swing.JLabel Mobile_Name;
    private javax.swing.JLabel Model_id;
    private javax.swing.JLabel Price;
    private javax.swing.JTextField SearchField;
    private javax.swing.JLabel Size;
    private javax.swing.JLabel Version;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton_add;
    private javax.swing.JButton jButton_clear;
    private javax.swing.JButton jButton_update;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox_company;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelClose;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton_android;
    private javax.swing.JRadioButton jRadioButton_ios;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_Mobilename;
    private javax.swing.JTextField jTextField_cameraback;
    private javax.swing.JTextField jTextField_camerafront;
    private javax.swing.JTextField jTextField_modelid;
    private javax.swing.JTextField jTextField_price;
    private javax.swing.JTextField jTextField_size;
    private javax.swing.JTextField jTextField_version;
    // End of variables declaration//GEN-END:variables

    private boolean isNumeric(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private static class BinarySearch {

        public BinarySearch() {
        }
    }

   
}
